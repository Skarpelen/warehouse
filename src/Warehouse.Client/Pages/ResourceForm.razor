@page "/resources/form/{Id:guid}"
@using Warehouse.Client.Components
@using Warehouse.Client.Services
@using Warehouse.Shared.DTO
@inject IApiAccess Api

<CrudForm TDto="ResourceDTO"
          Title="Ресурс"
          Id="@Id"
          ReturnUrl="/resources"
          LoadFunc="async id => await Api.GetResource(id).ContinueWith(t => (t.Result.Result, t.Result.Response))"
          SaveFunc="async dto => (Id == Guid.Empty
                                                     ? (await Api.CreateResource(dto))
                                                     : (await Api.UpdateResource(dto)))"
          DeleteFunc="async id => (await Api.DeleteResource(id))"
          ArchiveFunc="async id => (await Api.ArchiveResource(id))"
          UnarchiveFunc="async id => (await Api.UnarchiveResource(id))">
    <Template Context="model">
        <MudTextField Label="Наименование" @bind-Value="model.Name" />
    </Template>
</CrudForm>

@code {
    [Parameter] public Guid Id { get; set; }
}