@page "/units"
@using Warehouse.Client.Components
@using Warehouse.Client.Services
@using Warehouse.Shared.DTO
@inject IApiAccess Api
@inject NavigationManager Nav
@inject IToastService Toast

<PageTitle>Единицы измерения</PageTitle>

<h3>Единицы измерения</h3>

<MudStack Row="true" Spacing="2" Class="mb-4">
    <MudButton Variant="Variant.Filled"
               OnClick='() => Nav.NavigateTo("/units/form/00000000-0000-0000-0000-000000000000")'>
        Добавить
    </MudButton>
    <MudButton Variant="Variant.Outlined"
               OnClick='() => Nav.NavigateTo("/units/archive")'>
        К архиву
    </MudButton>
</MudStack>

@if (_isLoading)
{
    <LoadingIndicator />
}
else
{
    <MudTable T="UnitDTO" Items="_units" Dense="true" Hover="true"
              OnRowClick='e => Nav.NavigateTo($"/units/form/{e.Item.Id}")'>
        <HeaderContent>
            <MudTh>Наименование</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd>@context.Name</MudTd>
        </RowTemplate>
        <NoRecordsContent>
            Нет единиц измерения
        </NoRecordsContent>
    </MudTable>
}

@code {
    private IEnumerable<UnitDTO> _units = Array.Empty<UnitDTO>();
    private bool _isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        var res = await Api.GetAllUnits(false);

        if (res.Result == ResultCode.Ok && res.Response is not null)
        {
            _units = res.Response;
        }
        else
        {
            Toast.ShowError("Не удалось загрузить единицы измерения");
        }

        _isLoading = false;
    }
}